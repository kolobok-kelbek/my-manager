version: '3.9'

services:
  my-manager-proxy:
    image: traefik:v3.0
    container_name: my-manager-proxy
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --log.level=DEBUG
      - --entrypoints.web.address=:80
      - --providers.docker.exposedbydefault=false
    ports:
      - 8080:80
      - 8081:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - my-manager

  my-manager-api:
    build:
      dockerfile: Dockerfile
      context: .
    container_name: my-manager-api
    command: [ "-c", "air-api.toml" ]
    volumes:
      - ./../backend:/go/src/app
      - $GOPATH/pkg:/go/pkg:ro
    ports:
      - "40000:40000"
    networks:
      - my-manager
    labels:
      - traefik.enable=true
      - traefik.http.routers.my-manager.rule=Host(`my-manager-api.local`)

  my-manager:
    build:
      dockerfile: Dockerfile-frontend
      context: .
    container_name: my-manager
    environment:
      PORT: 8080
    tty: true
    user: 1000:1000
    volumes:
      - ./../frontend:/app
    networks:
      - my-manager
    labels:
      - traefik.enable=true
      - traefik.http.routers.user-manager-frontend.rule=Host(`my-manager.local`)

  my-manager-postgres:
    image: postgres:15.1
    container_name: my-manager-postgres
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
      POSTGRES_DB: dev
    ports:
      - "5432:5432"
    networks:
      - my-manager

  # my-manager-migrate:
  #   build:
  #     dockerfile: Dockerfile
  #     context: .
  #     target: golang
  #   container_name: my-manager-migrate
  #   command: go run main.go migrate
  #   volumes:
  #     - ./:/go/src/app:ro
  #     - $GOPATH/pkg:/go/pkg:ro
  #   networks:
  #     - my-manager
  #   depends_on:
  #     - my-manager-postgres

networks:
  my-manager:
    name: my-manager
